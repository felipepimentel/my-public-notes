version: '3.8'

services:
  # === CORE: MCP Host and Orchestrator ===
  mcp-host:
    build: 
      context: ./mcp-host
      dockerfile: Dockerfile
    image: mcp-host:demo
    container_name: mcp-host
    environment:
      - PYTHONUNBUFFERED=1
      - DEMO_MODE=true
      - WEBSOCKET_PORT=9999
    ports:
      - "9999:9999"  # WebSocket for dashboard
      - "8000:8000"  # MCP Host HTTP
    volumes:
      - ./mcp-servers:/app/servers
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - a2a-broker
      - prometheus
    networks:
      - mcp-network
    restart: unless-stopped

  # === MCP SERVERS ===
  # File Management Server
  file-mcp-server:
    build: ./mcp-servers/file-server
    container_name: file-mcp-server
    ports:
      - "8001:8001"
    volumes:
      - shared-data:/data
    environment:
      - MCP_SERVER_PORT=8001
      - MCP_SERVER_NAME=file-manager
      - DATA_DIR=/data
    networks:
      - mcp-network

  # CLI Command Server
  cli-mcp-server:
    build: ./mcp-servers/cli-server
    container_name: cli-mcp-server
    ports:
      - "8002:8002"
    volumes:
      - shared-data:/data
    environment:
      - MCP_SERVER_PORT=8002
      - MCP_SERVER_NAME=command-runner
      - WORKSPACE_DIR=/data
    networks:
      - mcp-network

  # Knowledge Base Vector Store Server
  kb-mcp-server:
    build: ./mcp-servers/kb-server
    container_name: kb-mcp-server
    ports:
      - "8003:8003"
    volumes:
      - kb-data:/data
    environment:
      - MCP_SERVER_PORT=8003
      - MCP_SERVER_NAME=knowledge-base
      - DB_PATH=/data/vector_db
    networks:
      - mcp-network

  # API Governor Server (for managing and monitoring APIs)
  api-mcp-server:
    build: ./mcp-servers/api-server
    container_name: api-mcp-server
    ports:
      - "8004:8004"
    depends_on:
      - kong
    environment:
      - MCP_SERVER_PORT=8004
      - MCP_SERVER_NAME=api-governor
      - KONG_ADMIN_URL=http://kong:8001
    networks:
      - mcp-network

  # === A2A (AGENT-TO-AGENT) COMMUNICATION ===
  a2a-broker:
    image: rabbitmq:3-management
    container_name: a2a-broker
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=mcp
      - RABBITMQ_DEFAULT_PASS=mcp
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - mcp-network

  # === OBSERVABILITY ===
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - mcp-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=mcp
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - mcp-network

  # === INFRASTRUCTURE COMPONENTS ===
  kong:
    image: kong:latest
    container_name: kong
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - "8080:8000"  # API Gateway
      - "8081:8001"  # Admin API
    volumes:
      - ./config/kong:/etc/kong
    networks:
      - mcp-network

  # === DEMO DASHBOARD ===
  mcp-dashboard:
    build: ./dashboard
    container_name: mcp-dashboard
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_WEBSOCKET_URL=ws://localhost:9999
      - REACT_APP_GRAFANA_URL=http://localhost:3000
    depends_on:
      - mcp-host
    networks:
      - mcp-network

  # === EXAMPLE MICROSERVICES ===
  user-service:
    build: ./services/user-service
    container_name: user-service
    environment:
      - SERVICE_PORT=8080
      - SERVICE_NAME=user-service
    networks:
      - mcp-network

  payment-service:
    build: ./services/payment-service
    container_name: payment-service
    environment:
      - SERVICE_PORT=8080
      - SERVICE_NAME=payment-service
    networks:
      - mcp-network

networks:
  mcp-network:
    driver: bridge
    name: mcp-network

volumes:
  shared-data:
  kb-data:
  rabbitmq-data:
  prometheus-data:
  grafana-data: 