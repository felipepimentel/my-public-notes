name: Build and Deploy GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: './docs'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Prepare workspace
        run: |
          echo "Preparing workspace..."
          
          # Ensure .nojekyll exists in the docs directory
          cp .nojekyll docs/ 2>/dev/null || touch docs/.nojekyll
          
          # Create assets directories if they don't exist
          mkdir -p docs/assets/css docs/assets/js docs/assets/img
          
          echo "Workspace preparation complete"

      - name: Prepare SCSS files
        working-directory: ./docs
        run: |
          echo "Ensuring proper front matter in SCSS files..."
          
          # Process all SCSS files
          find assets/css -name "*.scss" -type f | while read -r file; do
            echo "Checking $file"
            # Check if file has front matter
            if ! grep -q "^---" "$file"; then
              echo "Adding front matter to $file"
              temp_file=$(mktemp)
              echo "---" > "$temp_file"
              echo "---" >> "$temp_file"
              cat "$file" >> "$temp_file"
              mv "$temp_file" "$file"
            fi
          done
          
          echo "SCSS preparation complete"

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./docs/_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 